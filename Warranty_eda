import pandas as pd
import numpy as np

# Set the correct columns for the dataset
DATE_COL = "WARRANTY_CLAIM_DATE"   # or SALE_DATE / your date column
VALUE_COL = "WARRANTY_COST"        # or PRICE / your value column

# Ensure df is loaded, e.g.:
# df = pd.read_csv("cleaned.csv")

# Dtypes
df[DATE_COL] = pd.to_datetime(df[DATE_COL], errors="coerce")
df[VALUE_COL] = pd.to_numeric(df[VALUE_COL], errors="coerce")

# Monthly aggregation: use .mean() for prices, .sum() if you want totals
monthly = (
    df.set_index(DATE_COL)
      .resample("M")[VALUE_COL]
      .mean()
      .dropna()
    .to_frame("value")
)

# Time index for linear regression t = 0..N-1
monthly["t"] = np.arange(len(monthly))

# Linear fit value = a + b*t
b, a = np.polyfit(monthly["t"], monthly["value"], 1)  # slope, intercept
monthly["linear_fit"] = a + b * monthly["t"]

# Optional: fit quality
ss_res = ((monthly["value"] - monthly["linear_fit"])**2).sum()
ss_tot = ((monthly["value"] - monthly["value"].mean())**2).sum()
r2 = float("nan") if ss_tot == 0 else 1 - ss_res/ss_tot
print(f"slope={b:.6f}, intercept={a:.6f}, R2={r2:.4f}")

# Save for plotting
out = monthly.reset_index().rename(columns={DATE_COL: "month"})
out["month_str"] = out["month"].dt.strftime("%Y-%m")
out.to_csv("monthly_trend_with_linear_fit.csv", index=False)
